# File: .github/workflows/terraform-apply.yml
name: Terraform Apply

on:
  push:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Connect Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Check for plan artifact
      id: check_artifact
      run: |
        if gh run download -n tfplan; then
          echo "plan_exists=true" >> $GITHUB_OUTPUT
        else
          echo "plan_exists=false" >> $GITHUB_OUTPUT
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Apply changes
      run: |
        if [ "${{ steps.check_artifact.outputs.plan_exists }}" = "true" ]; then
          echo "Attempting to apply Terraform plan from artifact"
          if terraform show tfplan &>/dev/null; then
            echo "Applying plan from artifact"
            terraform apply -auto-approve tfplan
          else
            echo "Saved plan is stale. Generating new plan and applying"
            terraform plan -out=tfplan
            terraform apply -auto-approve tfplan
          fi
        else
          echo "No plan artifact found. Generating new plan and applying"
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
        fi
      env:
        TF_VAR_tailscale_auth_key_dev: ${{ secrets.TAILSCALE_AUTH_KEY_DEV }}
        TF_VAR_tailscale_auth_key_prod: ${{ secrets.TAILSCALE_AUTH_KEY_PROD }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-west-2

    - name: Update PR comment
      if: failure()
      uses: actions/github-script@v6
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Terraform apply failed. Please check the workflow logs for details.'
          })