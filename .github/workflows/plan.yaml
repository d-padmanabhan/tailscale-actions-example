name: Terraform Plan

on:
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Connect Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: |
        terraform plan -no-color -out=tfplan
        terraform show -no-color tfplan > tfplan.txt
      env:
        TF_VAR_tailscale_auth_key_dev: ${{ secrets.TAILSCALE_AUTH_KEY_DEV }}
        TF_VAR_tailscale_auth_key_prod: ${{ secrets.TAILSCALE_AUTH_KEY_PROD }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-west-2

    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: |
          tfplan
          tfplan.txt

          - name: Comment PR
          uses: actions/github-script@v6
          with:
            github-token: ${{secrets.GITHUB_TOKEN}}
            script: |
              const fs = require('fs');
              let planOutput = fs.readFileSync('tfplan.txt', 'utf8');
              
              // Clean up the plan output
              planOutput = planOutput
                .replace(/^Terraform used the selected providers.*\n/, '')
                .replace(/^Resource actions are indicated.*\n/, '')
                .replace(/::debug::.*\n/g, '')
                .replace(/::set-output.*\n/g, '')
                .trim();
              
              let summary = '';
              const match = planOutput.match(/Plan: (\d+) to add, (\d+) to change, (\d+) to destroy\./);
              if (match) {
                const [, add, change, destroy] = match;
                summary = `Plan: ${add} to add, ${change} to change, ${destroy} to destroy.`;
              }
              
              const body = `## Terraform Plan Summary
              ${summary}
    
              <details><summary>Show Full Plan</summary>
    
              \`\`\`hcl
              ${planOutput}
              \`\`\`
    
              </details>
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              })